{"ast":null,"code":"var _jsxFileName = \"/Users/larisabulacheva/nutrition-calculator/src/ui/app/app.tsx\";\nimport React from 'react';\nimport Meal from '../meal/meal';\nimport { config } from '../../dev/config';\nimport './app.css';\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      breakfast: config.defaultValues.breakfast,\n      lunch: config.defaultValues.lunch,\n      dinner: config.defaultValues.dinner\n    };\n\n    this.renderAllMeals = allMeals => {\n      return allMeals.map(mealName => {\n        return this.renderMeal(mealName);\n      });\n    };\n\n    this.renderMeal = mealName => {\n      return /*#__PURE__*/React.createElement(Meal, {\n        changeValue: this.changeValue,\n        maxLimit: config.limits.meal,\n        nutritionValues: this.state[mealName],\n        mealName: mealName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 12\n        }\n      });\n    };\n\n    this.changeValue = (value, mealName) => {\n      this.setState({\n        [mealName]: value.value\n      });\n    };\n  }\n\n  render() {\n    const allMeals = config.uiText.meals.map(meal => {\n      return meal.name;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"root\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, this.renderAllMeals(allMeals));\n  }\n\n}","map":{"version":3,"sources":["/Users/larisabulacheva/nutrition-calculator/src/ui/app/app.tsx"],"names":["React","Meal","config","App","Component","state","breakfast","defaultValues","lunch","dinner","renderAllMeals","allMeals","map","mealName","renderMeal","changeValue","limits","meal","value","setState","render","uiText","meals","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAO,WAAP;AAUA,eAAe,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAA6C;AAAA;AAAA;AAAA,SACnDC,KADmD,GACpC;AACpBC,MAAAA,SAAS,EAAEJ,MAAM,CAACK,aAAP,CAAqBD,SADZ;AAEpBE,MAAAA,KAAK,EAAEN,MAAM,CAACK,aAAP,CAAqBC,KAFR;AAGpBC,MAAAA,MAAM,EAAEP,MAAM,CAACK,aAAP,CAAqBE;AAHT,KADoC;;AAAA,SAkBlDC,cAlBkD,GAkBhCC,QAAD,IAA8C;AACrE,aAAOA,QAAQ,CAACC,GAAT,CAAcC,QAAD,IAAsB;AACxC,eAAO,KAAKC,UAAL,CAAgBD,QAAhB,CAAP;AACD,OAFM,CAAP;AAGD,KAtByD;;AAAA,SAwBlDC,UAxBkD,GAwBpCD,QAAD,IAA0C;AAC7D,0BAAO,oBAAC,IAAD;AACL,QAAA,WAAW,EAAE,KAAKE,WADb;AAEL,QAAA,QAAQ,EAAEb,MAAM,CAACc,MAAP,CAAcC,IAFnB;AAGL,QAAA,eAAe,EAAG,KAAKZ,KAAN,CAA0BQ,QAA1B,CAHZ;AAIL,QAAA,QAAQ,EAAEA,QAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAOD,KAhCyD;;AAAA,SAiClDE,WAjCkD,GAiCpC,CAACG,KAAD,EAA4BL,QAA5B,KAAuD;AAC3E,WAAKM,QAAL,CAAc;AACZ,SAACN,QAAD,GAAYK,KAAK,CAACA;AADN,OAAd;AAGD,KArCyD;AAAA;;AAOnDE,EAAAA,MAAP,GAAoC;AAClC,UAAMT,QAAQ,GAAGT,MAAM,CAACmB,MAAP,CAAcC,KAAd,CAAoBV,GAApB,CAAyBK,IAAD,IAAoB;AAC3D,aAAOA,IAAI,CAACM,IAAZ;AACD,KAFgB,CAAjB;AAGA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKb,cAAL,CAAoBC,QAApB,CADH,CADF;AAKD;;AAhByD","sourcesContent":["import React from 'react';\nimport NumberFormat, { NumberFormatValues } from 'react-number-format'\nimport Meal from '../meal/meal'\nimport { config } from '../../dev/config';\nimport './app.css';\nimport { MealData, Indexable } from '../../store/types';\n\ntype State = {\n  breakfast: number\n  lunch: number\n  dinner: number\n}\n\n\nexport default class App extends React.Component<{}, State> {\n  public state: State = {\n    breakfast: config.defaultValues.breakfast,\n    lunch: config.defaultValues.lunch,\n    dinner: config.defaultValues.dinner,\n  }\n\n  public render(): React.ReactElement {\n    const allMeals = config.uiText.meals.map((meal: MealData) => {\n      return meal.name\n    })\n    return (\n      <div className=\"root\">\n        {this.renderAllMeals(allMeals)}\n      </div>\n    )\n  }\n\n  private renderAllMeals = (allMeals: string[]): React.ReactElement[] => {\n    return allMeals.map((mealName: string) => {\n      return this.renderMeal(mealName)\n    })\n  }\n\n  private renderMeal = (mealName: string): React.ReactElement => {\n    return <Meal\n      changeValue={this.changeValue}\n      maxLimit={config.limits.meal}\n      nutritionValues={(this.state as Indexable)[mealName]}\n      mealName={mealName}\n    />\n\n  }\n  private changeValue = (value: NumberFormatValues, mealName: string): void => {\n    this.setState({\n      [mealName]: value.value,\n    } as any)\n  }\n\n}"]},"metadata":{},"sourceType":"module"}