{"ast":null,"code":"var _jsxFileName = \"/Users/larisabulacheva/nutrition-calculator/src/ui/app/app.tsx\";\nimport React from 'react';\nimport Meal from '../meal/meal';\nimport { config } from '../../dev/config';\nimport './app.css';\n\nconst getDefaults = fieldName => {\n  return config.defaultValues.meals.find(meal => {\n    return meal.name === fieldName;\n  });\n};\n\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      breakfast: getDefaults('breakfast').defaultValue,\n      lunch: getDefaults('lunch').defaultValue,\n      dinner: getDefaults('dinner').defaultValue\n    };\n\n    this.renderAllMeals = allMeals => {\n      return allMeals.map(fielName => {\n        return this.renderMeal(fielName);\n      });\n    };\n\n    this.renderMeal = fielName => {\n      return /*#__PURE__*/React.createElement(Meal, {\n        changeValue: this.changeValue,\n        maxLimit: config.limits.meal,\n        nutritionValues: this.state[fielName],\n        fieldName: fieldName,\n        suffix: getDefaults(fieldName).description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 12\n        }\n      });\n    };\n\n    this.changeValue = (value, fielName) => {\n      this.setState({\n        [fielName]: value.value\n      });\n    };\n  }\n\n  render() {\n    const allMeals = config.defaultValues.meals.map(meal => {\n      return meal.name;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"root\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, this.renderAllMeals(allMeals));\n  }\n\n}","map":{"version":3,"sources":["/Users/larisabulacheva/nutrition-calculator/src/ui/app/app.tsx"],"names":["React","Meal","config","getDefaults","fieldName","defaultValues","meals","find","meal","name","App","Component","state","breakfast","defaultValue","lunch","dinner","renderAllMeals","allMeals","map","fielName","renderMeal","changeValue","limits","description","value","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAO,WAAP;;AASA,MAAMC,WAAW,GAAIC,SAAD,IAAiC;AACnD,SAAOF,MAAM,CAACG,aAAP,CAAqBC,KAArB,CAA2BC,IAA3B,CAAiCC,IAAD,IAAoB;AACzD,WAAOA,IAAI,CAACC,IAAL,KAAcL,SAArB;AACD,GAFM,CAAP;AAGD,CAJD;;AAMA,eAAe,MAAMM,GAAN,SAAkBV,KAAK,CAACW,SAAxB,CAA6C;AAAA;AAAA;AAAA,SACnDC,KADmD,GACpC;AACpBC,MAAAA,SAAS,EAAEV,WAAW,CAAC,WAAD,CAAX,CAAyBW,YADhB;AAEpBC,MAAAA,KAAK,EAAEZ,WAAW,CAAC,OAAD,CAAX,CAAqBW,YAFR;AAGpBE,MAAAA,MAAM,EAAEb,WAAW,CAAC,QAAD,CAAX,CAAsBW;AAHV,KADoC;;AAAA,SAkBlDG,cAlBkD,GAkBhCC,QAAD,IAA8C;AACrE,aAAOA,QAAQ,CAACC,GAAT,CAAcC,QAAD,IAAsB;AACxC,eAAO,KAAKC,UAAL,CAAgBD,QAAhB,CAAP;AACD,OAFM,CAAP;AAGD,KAtByD;;AAAA,SAwBlDC,UAxBkD,GAwBpCD,QAAD,IAA0C;AAC7D,0BAAO,oBAAC,IAAD;AACL,QAAA,WAAW,EAAE,KAAKE,WADb;AAEL,QAAA,QAAQ,EAAEpB,MAAM,CAACqB,MAAP,CAAcf,IAFnB;AAGL,QAAA,eAAe,EAAG,KAAKI,KAAN,CAA0BQ,QAA1B,CAHZ;AAIL,QAAA,SAAS,EAAEhB,SAJN;AAKL,QAAA,MAAM,EAAED,WAAW,CAACC,SAAD,CAAX,CAAuBoB,WAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAQD,KAjCyD;;AAAA,SAkClDF,WAlCkD,GAkCpC,CAACG,KAAD,EAA4BL,QAA5B,KAAuD;AAC3E,WAAKM,QAAL,CAAc;AACZ,SAACN,QAAD,GAAYK,KAAK,CAACA;AADN,OAAd;AAGD,KAtCyD;AAAA;;AAOnDE,EAAAA,MAAP,GAAoC;AAClC,UAAMT,QAAQ,GAAGhB,MAAM,CAACG,aAAP,CAAqBC,KAArB,CAA2Ba,GAA3B,CAAgCX,IAAD,IAAoB;AAClE,aAAOA,IAAI,CAACC,IAAZ;AACD,KAFgB,CAAjB;AAGA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKQ,cAAL,CAAoBC,QAApB,CADH,CADF;AAKD;;AAhByD","sourcesContent":["import React from 'react';\nimport NumberFormat, { NumberFormatValues } from 'react-number-format'\nimport Meal from '../meal/meal'\nimport { config } from '../../dev/config';\nimport './app.css';\nimport { MealData, Indexable } from '../../store/types';\n\ntype State = {\n  breakfast: number\n  lunch: number\n  dinner: number\n}\n\nconst getDefaults = (fieldName: string): MealData => {\n  return config.defaultValues.meals.find((meal: MealData) => {\n    return meal.name === fieldName\n  }) as MealData\n}\n\nexport default class App extends React.Component<{}, State> {\n  public state: State = {\n    breakfast: getDefaults('breakfast').defaultValue,\n    lunch: getDefaults('lunch').defaultValue,\n    dinner: getDefaults('dinner').defaultValue\n  }\n\n  public render(): React.ReactElement {\n    const allMeals = config.defaultValues.meals.map((meal: MealData) => {\n      return meal.name\n    })\n    return (\n      <div className=\"root\">\n        {this.renderAllMeals(allMeals)}\n      </div>\n    )\n  }\n\n  private renderAllMeals = (allMeals: string[]): React.ReactElement[] => {\n    return allMeals.map((fielName: string) => {\n      return this.renderMeal(fielName)\n    })\n  }\n\n  private renderMeal = (fielName: string): React.ReactElement => {\n    return <Meal\n      changeValue={this.changeValue}\n      maxLimit={config.limits.meal}\n      nutritionValues={(this.state as Indexable)[fielName]}\n      fieldName={fieldName}\n      suffix={getDefaults(fieldName).description}\n    />\n\n  }\n  private changeValue = (value: NumberFormatValues, fielName: string): void => {\n    this.setState({\n      [fielName]: value.value,\n    } as any)\n  }\n\n}"]},"metadata":{},"sourceType":"module"}