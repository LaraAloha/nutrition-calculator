{"ast":null,"code":"var _jsxFileName = \"/Users/larisabulacheva/nutrition-calculator/src/ui/app/app.tsx\";\nimport React from 'react';\nimport Meal from '../meal/meal';\nimport { config } from '../../dev/config';\nimport './app.css';\n\nconst getMealData = fieldName => {\n  return config.defaultValues.meals.find(meal => {\n    return meal.name === fieldName;\n  });\n};\n\nconst getValuesByName = () => {\n  return config.defaultValues.meals.map(meal => {\n    return meal.name;\n  });\n};\n\nconst getDefaults = () => {\n  return getValuesByName().map(name => {\n    return {\n      name,\n      value: getMealData(name).defaultValue\n    };\n  });\n};\n\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      meals: getDefaults()\n    };\n\n    this.getAllMeals = allMeals => {\n      return allMeals.filter(fieldName => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: fieldName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 9\n          }\n        }, this.renderMeal(fieldName));\n      });\n    };\n\n    this.renderMeal = fieldName => {\n      const fieldIndex = this.state.meals.findIndex(meal => {\n        return meal.name === fieldName;\n      });\n      return /*#__PURE__*/React.createElement(Meal, {\n        changeValue: this.changeValue,\n        maxLimit: config.limits.meal,\n        currentNutritionData: this.state.meals[fieldIndex],\n        fieldData: getMealData(fieldName),\n        suffix: config.uiText.suffix,\n        onRemove: this.onRemove,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 12\n        }\n      });\n    };\n\n    this.changeValue = (value, fieldName) => {\n      const newMeals = [...this.state.meals];\n      const fieldIndex = this.state.meals.findIndex(meal => {\n        return meal.name === fieldName;\n      });\n      newMeals[fieldIndex].value = value.floatValue || 0;\n      this.setState({\n        meals: newMeals\n      });\n    };\n\n    this.onRemove = fieldName => {\n      const fieldIndex = this.getIndexByField(fieldName);\n      const updatedFields = this.state.meals.filter((meal, index) => {\n        return meal.name !== fieldName;\n      });\n      console.log(updatedFields);\n      this.setState({\n        meals: updatedFields\n      });\n    };\n\n    this.getIndexByField = fieldName => {\n      return this.state.meals.findIndex(meal => {\n        return meal.name === fieldName;\n      });\n    };\n  }\n\n  render() {\n    const allMeals = config.defaultValues.meals.map(meal => {\n      return meal.name;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"root\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, this.getAllMeals(allMeals));\n  }\n\n}","map":{"version":3,"sources":["/Users/larisabulacheva/nutrition-calculator/src/ui/app/app.tsx"],"names":["React","Meal","config","getMealData","fieldName","defaultValues","meals","find","meal","name","getValuesByName","map","getDefaults","value","defaultValue","App","Component","state","getAllMeals","allMeals","filter","renderMeal","fieldIndex","findIndex","changeValue","limits","uiText","suffix","onRemove","newMeals","floatValue","setState","getIndexByField","updatedFields","index","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport NumberFormat, { NumberFormatValues } from 'react-number-format'\nimport Meal from '../meal/meal'\nimport { config } from '../../dev/config';\nimport './app.css';\nimport { MealData, MealType, Indexable } from '../../store/types';\n\ntype State = {\n  meals: MealType[]\n}\n\nconst getMealData = (fieldName: string): MealData => {\n  return config.defaultValues.meals.find((meal: MealData) => {\n    return meal.name === fieldName\n  }) as MealData\n}\n\nconst getValuesByName = () => {\n  return config.defaultValues.meals.map((meal: MealData) => {\n    return meal.name\n  })\n}\n\nconst getDefaults = (): MealType[] => {\n  return getValuesByName().map((name: string) => {\n    return {\n      name,\n      value: getMealData(name).defaultValue\n    }\n  })\n}\n\nexport default class App extends React.Component<{}, State> {\n  public state: State = {\n    meals: getDefaults()\n  }\n\n  public render(): React.ReactElement {\n    const allMeals = config.defaultValues.meals.map((meal: MealData) => {\n      return meal.name\n    })\n    return (\n      <div className=\"root\">\n        {this.getAllMeals(allMeals)}\n      </div>\n    )\n  }\n\n  private getAllMeals = (allMeals: string[]): React.ReactElement[] => {\n    return allMeals.filter((fieldName: string) => {\n      return (\n        <div key={fieldName}>\n          {this.renderMeal(fieldName)}\n        </div>\n      )\n    })\n  }\n\n  private renderMeal = (fieldName: string): React.ReactElement => {\n    const fieldIndex = this.state.meals.findIndex((meal: MealType) => {\n      return meal.name === fieldName\n    });\n    return <Meal\n      changeValue={this.changeValue}\n      maxLimit={config.limits.meal}\n      currentNutritionData={this.state.meals[fieldIndex]}\n      fieldData={getMealData(fieldName)}\n      suffix={config.uiText.suffix}\n      onRemove={this.onRemove}\n    />\n  }\n\n\n  private changeValue = (value: NumberFormatValues, fieldName: string): void => {\n    const newMeals = [\n      ...this.state.meals\n    ]\n    const fieldIndex = this.state.meals.findIndex((meal: MealType) => {\n      return meal.name === fieldName\n    });\n\n    newMeals[fieldIndex].value = value.floatValue || 0\n\n    this.setState({\n      meals: newMeals\n    })\n  }\n\n  private onRemove = (fieldName: string): void => {\n    const fieldIndex = this.getIndexByField(fieldName)\n    const updatedFields = this.state.meals.filter((meal: MealType, index: number) => {\n      return meal.name !== fieldName\n    })\n    console.log(updatedFields)\n    this.setState({\n      meals: updatedFields\n    } as any)\n  }\n\n  private getIndexByField = (fieldName: string): number => {\n    return this.state.meals.findIndex((meal: MealType) => {\n      return meal.name === fieldName\n    }) as number\n  }\n}"]},"metadata":{},"sourceType":"module"}