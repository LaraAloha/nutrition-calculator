{"ast":null,"code":"var _jsxFileName = \"/Users/larisabulacheva/nutrition-calculator/src/ui/meal/meal.tsx\";\nimport React from 'react';\nimport NumberFormat from 'react-number-format';\nimport { formatThousands } from '../../helpers/format-thousands';\nimport { NBSP } from '../../store/constants';\nimport './meal.css';\nexport default class Meal extends React.Component {\n  render() {\n    const {\n      changeValue,\n      maxLimit,\n      nutritionValues,\n      fieldData,\n      suffix\n    } = this.props;\n\n    const changeMeal = value => changeValue(value, fieldData.name);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"root_meal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, fieldData.name), /*#__PURE__*/React.createElement(NumberFormat, {\n      className: \"field_meal\",\n      thousandSeparator: NBSP,\n      allowNegative: false,\n      value: formatThousands(nutritionValues) // isAllowed={allowedLimits(maxLimit)}\n      ,\n      onValueChange: changeMeal,\n      suffix: NBSP + suffix,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"remove\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/larisabulacheva/nutrition-calculator/src/ui/meal/meal.tsx"],"names":["React","NumberFormat","formatThousands","NBSP","Meal","Component","render","changeValue","maxLimit","nutritionValues","fieldData","suffix","props","changeMeal","value","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAiD,qBAAjD;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,OAAO,YAAP;AAWA,eAAe,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAA8C;AAElDC,EAAAA,MAAP,GAAoC;AAChC,UAAM;AACFC,MAAAA,WADE;AAEFC,MAAAA,QAFE;AAGFC,MAAAA,eAHE;AAIFC,MAAAA,SAJE;AAKFC,MAAAA;AALE,QAMF,KAAKC,KANT;;AAOA,UAAMC,UAAU,GACXC,KAAD,IACIP,WAAW,CAACO,KAAD,EAAQJ,SAAS,CAACK,IAAlB,CAFnB;;AAGA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBL,SAAS,CAACK,IAAlC,CADJ,eAEI,oBAAC,YAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,iBAAiB,EAAEZ,IAFvB;AAGI,MAAA,aAAa,EAAE,KAHnB;AAII,MAAA,KAAK,EAAED,eAAe,CAACO,eAAD,CAJ1B,CAKI;AALJ;AAMI,MAAA,aAAa,EAAEI,UANnB;AAOI,MAAA,MAAM,EAAEV,IAAI,GAAEQ,MAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAWI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,CADJ;AAgBH;;AA7BwD","sourcesContent":["import React from 'react'\nimport NumberFormat, { NumberFormatValues } from 'react-number-format'\nimport { allowedLimits } from '../../helpers/allowed-limits'\nimport { formatThousands } from '../../helpers/format-thousands'\nimport { NBSP } from '../../store/constants'\nimport './meal.css'\nimport { MealData } from '../../store/types';\n\ntype Props = {\n    changeValue: (value: NumberFormatValues, fieldName: string) => void\n    maxLimit: number\n    nutritionValues: number\n    fieldData: MealData\n    suffix: string\n}\n\nexport default class Meal extends React.Component<Props, {}> {\n\n    public render(): React.ReactElement {\n        const {\n            changeValue,\n            maxLimit,\n            nutritionValues,\n            fieldData,\n            suffix\n        } = this.props\n        const changeMeal =\n            (value: NumberFormatValues) =>\n                changeValue(value, fieldData.name)\n        return (\n            <div className=\"root_meal\">\n                <span className=\"text\">{fieldData.name}</span>\n                <NumberFormat\n                    className=\"field_meal\"\n                    thousandSeparator={NBSP}\n                    allowNegative={false}\n                    value={formatThousands(nutritionValues)}\n                    // isAllowed={allowedLimits(maxLimit)}\n                    onValueChange={changeMeal}\n                    suffix={NBSP +suffix}\n                />\n                <div className=\"remove\"></div>\n            </div>\n\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}