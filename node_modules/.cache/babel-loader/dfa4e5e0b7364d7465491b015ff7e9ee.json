{"ast":null,"code":"var _jsxFileName = \"/Users/larisabulacheva/nutrition-calculator/src/ui/meal/meal.tsx\";\nimport React from 'react';\nimport NumberFormat from 'react-number-format';\nimport { formatThousands } from '../../helpers/format-thousands';\nimport { NBSP } from '../../store/constants';\nimport './meal.css';\nexport default class Meal extends React.Component {\n  render() {\n    const {\n      changeValue,\n      maxLimit,\n      currentNutritionData,\n      fieldData,\n      suffix,\n      onRemove\n    } = this.props;\n    const fieldName = fieldData.name;\n\n    const changeMeal = fieldName => value => changeValue(value, fieldName);\n\n    const remove = () => onRemove(fieldData.name);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: fieldData.name,\n      className: \"root_meal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, fieldData.name), /*#__PURE__*/React.createElement(NumberFormat, {\n      className: \"field_meal\",\n      thousandSeparator: NBSP,\n      allowNegative: false,\n      value: formatThousands(currentNutritionData.value) //   isAllowed={allowedLimits(maxLimit)}\n      ,\n      onValueChange: changeMeal(fieldName),\n      suffix: NBSP + suffix,\n      max: maxLimit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: remove,\n      className: \"remove\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/larisabulacheva/nutrition-calculator/src/ui/meal/meal.tsx"],"names":["React","NumberFormat","formatThousands","NBSP","Meal","Component","render","changeValue","maxLimit","currentNutritionData","fieldData","suffix","onRemove","props","fieldName","name","changeMeal","value","remove"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAiD,qBAAjD;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,OAAO,YAAP;AAYA,eAAe,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAA8C;AAElDC,EAAAA,MAAP,GAAoC;AAChC,UAAM;AACFC,MAAAA,WADE;AAEFC,MAAAA,QAFE;AAGFC,MAAAA,oBAHE;AAIFC,MAAAA,SAJE;AAKFC,MAAAA,MALE;AAMFC,MAAAA;AANE,QAOF,KAAKC,KAPT;AAQA,UAAMC,SAAS,GAAGJ,SAAS,CAACK,IAA5B;;AACA,UAAMC,UAAU,GAAIF,SAAD,IACfG,KADsC,IAErCV,WAAW,CAACU,KAAD,EAAQH,SAAR,CAFhB;;AAIA,UAAMI,MAAM,GAAG,MAAMN,QAAQ,CAACF,SAAS,CAACK,IAAX,CAA7B;;AACA,wBACI;AAAK,MAAA,GAAG,EAAEL,SAAS,CAACK,IAApB;AAA0B,MAAA,SAAS,EAAC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBL,SAAS,CAACK,IAAlC,CADJ,eAEI,oBAAC,YAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,iBAAiB,EAAEZ,IAFvB;AAGI,MAAA,aAAa,EAAE,KAHnB;AAII,MAAA,KAAK,EAAED,eAAe,CAACO,oBAAoB,CAACQ,KAAtB,CAJ1B,CAKC;AALD;AAMI,MAAA,aAAa,EAAED,UAAU,CAACF,SAAD,CAN7B;AAOI,MAAA,MAAM,EAAEX,IAAI,GAAGQ,MAPnB;AAQI,MAAA,GAAG,EAAEH,QART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAYI;AAAQ,MAAA,OAAO,EAAEU,MAAjB;AAAyB,MAAA,SAAS,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,CADJ;AAiBH;;AAlCwD","sourcesContent":["import React from 'react'\nimport NumberFormat, { NumberFormatValues } from 'react-number-format'\nimport { allowedLimits } from '../../helpers/allowed-limits'\nimport { formatThousands } from '../../helpers/format-thousands'\nimport { NBSP } from '../../store/constants'\nimport './meal.css'\nimport { MealData, MealType } from '../../store/types';\n\ntype Props = {\n    changeValue: (value: NumberFormatValues, fieldName: string) => void\n    onRemove: (fieldName: string) => void\n    maxLimit: number\n    currentNutritionData: MealType\n    fieldData: MealData\n    suffix: string\n}\n\nexport default class Meal extends React.Component<Props, {}> {\n\n    public render(): React.ReactElement {\n        const {\n            changeValue,\n            maxLimit,\n            currentNutritionData,\n            fieldData,\n            suffix,\n            onRemove\n        } = this.props\n        const fieldName = fieldData.name\n        const changeMeal = (fieldName: string) => (\n            value: NumberFormatValues,\n        ) => changeValue(value, fieldName)\n\n        const remove = () => onRemove(fieldData.name)\n        return (\n            <div key={fieldData.name} className=\"root_meal\">\n                <span className=\"text\">{fieldData.name}</span>\n                <NumberFormat\n                    className=\"field_meal\"\n                    thousandSeparator={NBSP}\n                    allowNegative={false}\n                    value={formatThousands(currentNutritionData.value)}\n                 //   isAllowed={allowedLimits(maxLimit)}\n                    onValueChange={changeMeal(fieldName)}\n                    suffix={NBSP + suffix}\n                    max={maxLimit}\n                />\n                <button onClick={remove} className=\"remove\"></button>\n            </div>\n\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}