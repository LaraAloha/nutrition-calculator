{"ast":null,"code":"var _jsxFileName = \"/Users/larisabulacheva/nutrition-calculator/src/ui/meal/meal.tsx\";\nimport React from 'react';\nimport NumberFormat from 'react-number-format';\nimport { allowedLimits } from '../../helpers/allowed-limits';\nimport { formatThousands } from '../../helpers/format-thousands';\nimport { NBSP } from '../../store/constants';\nimport './meal.css';\nexport default class Meal extends React.Component {\n  render() {\n    const {\n      changeValue,\n      maxLimit,\n      suffix,\n      nutritionValues,\n      mealName\n    } = this.props;\n\n    const changeMeal = value => changeValue(value, mealName);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"root\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NumberFormat, {\n      className: \"field_meal\",\n      thousandSeparator: NBSP,\n      allowNegative: false,\n      value: formatThousands(nutritionValues) + suffix,\n      isAllowed: allowedLimits(maxLimit),\n      onValueChange: changeMeal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/larisabulacheva/nutrition-calculator/src/ui/meal/meal.tsx"],"names":["React","NumberFormat","allowedLimits","formatThousands","NBSP","Meal","Component","render","changeValue","maxLimit","suffix","nutritionValues","mealName","props","changeMeal","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAiD,qBAAjD;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,OAAO,YAAP;AAWA,eAAe,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAA8C;AAClDC,EAAAA,MAAP,GAAoC;AAChC,UAAM;AACFC,MAAAA,WADE;AAEFC,MAAAA,QAFE;AAGFC,MAAAA,MAHE;AAIFC,MAAAA,eAJE;AAKFC,MAAAA;AALE,QAMF,KAAKC,KANT;;AAOA,UAAMC,UAAU,GACXC,KAAD,IACIP,WAAW,CAACO,KAAD,EAAQH,QAAR,CAFnB;;AAGA,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,iBAAiB,EAAER,IAFvB;AAGI,MAAA,aAAa,EAAE,KAHnB;AAII,MAAA,KAAK,EAAED,eAAe,CAACQ,eAAD,CAAf,GAAmCD,MAJ9C;AAKI,MAAA,SAAS,EAAER,aAAa,CAACO,QAAD,CAL5B;AAMI,MAAA,aAAa,EAAEK,UANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAaH;;AAzBwD","sourcesContent":["import React from 'react'\nimport NumberFormat, { NumberFormatValues } from 'react-number-format'\nimport { allowedLimits } from '../../helpers/allowed-limits'\nimport { formatThousands } from '../../helpers/format-thousands'\nimport { NBSP } from '../../store/constants'\nimport './meal.css'\nimport { DefaultValues } from '../../store/types'\n\ntype Props = {\n    changeValue: (value: NumberFormatValues, mealName: string) => void\n    maxLimit: number\n    suffix: string\n    nutritionValues: number  // todo NumberFormatValues -> num\n    mealName: string\n}\n\nexport default class Meal extends React.Component<Props, {}> {\n    public render(): React.ReactElement {\n        const {\n            changeValue,\n            maxLimit,\n            suffix,\n            nutritionValues,\n            mealName\n        } = this.props\n        const changeMeal =\n            (value: NumberFormatValues) =>\n                changeValue(value, mealName)\n        return (\n            <div className=\"root\">\n                <NumberFormat\n                    className=\"field_meal\"\n                    thousandSeparator={NBSP}\n                    allowNegative={false}\n                    value={formatThousands(nutritionValues) + suffix}\n                    isAllowed={allowedLimits(maxLimit)}\n                    onValueChange={changeMeal}\n                />\n            </div>\n\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}